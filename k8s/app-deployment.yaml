apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-resolved.yml -o ./k8s
    kompose.service.type: LoadBalancer
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yml -o ./k8s
        kompose.service.type: LoadBalancer
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-kubernetes-arq-com-2-network: "true"
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: APP_CONTAINER_PORT
              value: "8080"
            - name: APP_LOCAL_PORT
              value: "8080"
            - name: DB_HOST
              value: mongodb
            - name: DB_NAME
              value: users
            - name: DB_PASSWORD
              value: password
            - name: DB_PORT
              value: "27017"
            - name: DB_USER
              value: root
            - name: MONGODB_CONTAINER_PORT
              value: "27017"
            - name: MONGODB_DATABASE
              value: users
            - name: MONGODB_LOCAL_PORT
              value: "27017"
            - name: MONGODB_PASSWORD
              value: password
            - name: MONGODB_USER
              value: root
            - name: PORT
              value: "8080"
          image: app
          name: app
          ports:
            - containerPort: 8080
              hostPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
